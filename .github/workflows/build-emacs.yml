name: Build Emacs for Windows

# Events that trigger the workflow
on:
  # 1. Allows manually running the workflow from the GitHub "Actions" tab
  workflow_dispatch:

  # 2. Runs the workflow every Monday at 02:00 UTC
  schedule:
    - cron: '0 2 * * 1'

jobs:
  build:
    runs-on: windows-latest # Windows runner for building Emacs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install MSYS2 and dependencies
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            base-devel
            git
            python
            zip
            mingw-w64-x86_64-autotools
            mingw-w64-x86_64-giflib
            mingw-w64-x86_64-gmp
            mingw-w64-x86_64-gnutls
            mingw-w64-x86_64-harfbuzz
            mingw-w64-x86_64-jansson
            mingw-w64-x86_64-lcms2
            mingw-w64-x86_64-libgccjit
            mingw-w64-x86_64-libjpeg-turbo
            mingw-w64-x86_64-libpng
            mingw-w64-x86_64-librsvg
            mingw-w64-x86_64-libtiff
            mingw-w64-x86_64-libtree-sitter
            mingw-w64-x86_64-libwebp
            mingw-w64-x86_64-libxml2
            mingw-w64-x86_64-make
            mingw-w64-x86_64-ntldd
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-sqlite3
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-tree-sitter
            mingw-w64-x86_64-xpm-nox
            mingw-w64-x86_64-zlib

      - name: Setup build environment
        shell: msys2 {0}
        run: |
          mkdir -p ~/emacs-build/git ~/emacs-build/deps ~/emacs-upload
          git clone --branch master git://git.savannah.gnu.org/emacs.git ~/emacs-build/git/master

      - name: Determine Latest Emacs Tag
        shell: msys2 {0}
        run: |
          ALL_TAGS=$(git ls-remote --tags --ref git://git.savannah.gnu.org/emacs.git | grep -o 'refs/tags/emacs-[0-9.]*$' | sed 's|refs/tags/||')
          LATEST_STABLE_TAG=$(echo "$ALL_TAGS" | grep -v -E '\.([5-9][0-9]|[1-9][0-9]{2,})$' | sort -V | tail -n 1)
          LATEST_OVERALL_TAG=$(echo "$ALL_TAGS" | sort -V | tail -n 1)
          LATEST_TAG=$(printf "%s\n%s" "$LATEST_STABLE_TAG" "$LATEST_OVERALL_TAG" | sort -V | tail -n 1)
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          echo "EMACS_MAJOR_VERSION=$(echo $LATEST_TAG | cut -d'.' -f1 | sed 's/emacs-//')" >> $GITHUB_ENV

      - name: Create Git worktree for the release
        shell: msys2 {0}
        run: |
          cd ~/emacs-build/git/master
          git worktree add ../emacs-${{ env.LATEST_TAG }} ${{ env.LATEST_TAG }}

      - name: Create tree-sitter symlink
        shell: msys2 {0}
        run: |
          ln -s /mingw64/bin/libtree-sitter-0.25.dll /mingw64/bin/libtree-sitter.dll

      - name: Patch build scripts
        shell: msys2 {0}
        run: |
          SCRIPT_PY=~/emacs-build/git/master/admin/nt/dist-build/build-dep-zips.py
          sed -i '/MUNGE_DEP_PKGS={/a "mingw-w64-x86_64-cc-libs": "mingw-w64-x86_64-gcc-libs",' "$SCRIPT_PY"
          sed -i 's/libwinpthread-git/libwinpthread/g' "$SCRIPT_PY"
          sed -i 's/mingw-w64-winpthreads-git/mingw-w64-winpthreads/g' "$SCRIPT_PY"
          sed -i 's/libtre-git/libtre/g' "$SCRIPT_PY"
          sed -i '/"mingw-w64-xz": ".src.tar.zst",/a "mingw-w64-lzo2": ".src.tar.gz",' "$SCRIPT_PY"
          sed -i 's/src_ext = ".src.tar.gz"/src_ext = ".src.tar.zst"/' "$SCRIPT_PY"

          SCRIPT_SH=~/emacs-build/git/emacs-${{ env.LATEST_TAG }}/admin/nt/dist-build/build-zips.sh
          sed -i 's|REPO_DIR=$HOME/emacs-build/git/|REPO_DIR=$HOME/emacs-build/git|' "$SCRIPT_SH"

      - name: Show patched script
        shell: msys2 {0}
        run: |
          cat ~/emacs-build/git/master/admin/nt/dist-build/build-dep-zips.py

      - name: Build dependencies
        shell: msys2 {0}
        run: |
          cd ~/emacs-build/deps
          python3 ~/emacs-build/git/master/admin/nt/dist-build/build-dep-zips.py
        env:
          MSYSTEM: MSYS
      - name: Display directory tree
        shell: msys2 {0}
        run: |
          find /home/runneradmin/ -type d

      - name: Build Emacs and create packages
        shell: msys2 {0}
        run: |
          cd ~/emacs-build/git/emacs-${{ env.LATEST_TAG }}/admin/nt/dist-build
          ./build-zips.sh -g

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: emacs-windows-dist-${{ env.LATEST_TAG }}
          path: ~/emacs-upload/*

      - name: Clean up old artifacts
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: '1 month'
          # Keep only the 2 most recent artifacts
          skip-recent: 2
