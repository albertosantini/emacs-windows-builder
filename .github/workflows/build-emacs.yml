name: Build Emacs for Windows

# Events that trigger the workflow
on:
  # 1. Allows manually running the workflow from the GitHub "Actions" tab
  workflow_dispatch:

  # 2. Runs the workflow every Monday at 02:00 UTC
  schedule:
    - cron: '0 2 * * 1'

jobs:
  build:
    runs-on: windows-latest # Usa runner Windows

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install MSYS2 and dependencies
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            base-devel
            git
            zip
            mingw-w64-x86_64-autotools
            mingw-w64-x86_64-giflib
            mingw-w64-x86_64-gmp
            mingw-w64-x86_64-gnutls
            mingw-w64-x86_64-harfbuzz
            mingw-w64-x86_64-jansson
            mingw-w64-x86_64-lcms2
            mingw-w64-x86_64-libgccjit
            mingw-w64-x86_64-libjpeg-turbo
            mingw-w64-x86_64-libpng
            mingw-w64-x86_64-librsvg
            mingw-w64-x86_64-libtiff
            mingw-w64-x86_64-libtree-sitter
            mingw-w64-x86_64-libwebp
            mingw-w64-x86_64-libxml2
            mingw-w64-x86_64-make
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-sqlite3
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-tree-sitter
            mingw-w64-x86_64-xpm-nox
            mingw-w64-x86_64-zlib

      - name: Determine Latest Emacs Tag
        shell: msys2 {0}
        run: |
          ALL_TAGS=$(git ls-remote --tags --ref git://git.savannah.gnu.org/emacs.git | grep -o 'refs/tags/emacs-[0-9.]*$' | sed 's|refs/tags/||')
          LATEST_STABLE_TAG=$(echo "$ALL_TAGS" | grep -v -E '\.([5-9][0-9]|[1-9][0-9]{2,})$' | sort -V | tail -n 1)
          LATEST_OVERALL_TAG=$(echo "$ALL_TAGS" | sort -V | tail -n 1)
          LATEST_TAG=$(printf "%s\n%s" "$LATEST_STABLE_TAG" "$LATEST_OVERALL_TAG" | sort -V | tail -n 1)
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Clone Emacs source (latest tag)
        shell: msys2 {0}
        run: |
          git clone --depth 1 --branch ${{ env.LATEST_TAG }} git://git.savannah.gnu.org/emacs.git

      - name: Build Emacs
        shell: msys2 {0}
        run: |
          cd emacs
          ./autogen.sh
          ./configure --prefix=/c/emacs-dist \
            --with-native-compilation=aot \
            --with-tree-sitter \
            --without-dbus
          make -j$(nproc)
          make install-strip

      - name: Show config logs
        if: always()
        shell: msys2 {0}
        run: |
          cd emacs
          if [ -f "config.log" ]; then
            echo "--- config.log content ---"
            cat config.log
            echo "--------------------------"
          fi

      # 7. Package the build into a versioned zip file
      - name: Package the build
        shell: msys2 {0}
        run: |
          zip -r emacs-windows-${{ env.LATEST_TAG }}.zip /c/emacs-dist

      # 8. Upload the versioned build artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: emacs-windows-build-${{ env.LATEST_TAG }}
          path: C:\emacs-windows-${{ env.LATEST_TAG }}.zip

      # 9. Clean up old artifacts to stay within storage limits
      - name: Clean up old artifacts
        uses: c-hive/gha-remove-artifacts@v1
        with:
          # Keep only the 2 most recent artifacts
          skip-recent: 2
